
WaterLevelIndicator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000055c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  0000055c  000005d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00000a08  00000000  00000000  000005d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000827  00000000  00000000  00000fdc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e5       	ldi	r30, 0x5C	; 92
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a2 36       	cpi	r26, 0x62	; 98
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 d5 01 	call	0x3aa	; 0x3aa <main>
  7a:	0c 94 ac 02 	jmp	0x558	; 0x558 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_voidInit>:
#define PORTA_DIR CONCBIT(DIO_PIN33_DIR, DIO_PIN34_DIR, DIO_PIN35_DIR, DIO_PIN36_DIR, DIO_PIN37_DIR, DIO_PIN38_DIR, DIO_PIN39_DIR, DIO_PIN40_DIR)
#define PORTB_DIR CONCBIT(DIO_PIN8_DIR, DIO_PIN7_DIR, DIO_PIN6_DIR, DIO_PIN5_DIR, DIO_PIN4_DIR, DIO_PIN3_DIR, DIO_PIN2_DIR, DIO_PIN1_DIR)
#define PORTC_DIR CONCBIT(DIO_PIN29_DIR, DIO_PIN28_DIR, DIO_PIN27_DIR, DIO_PIN26_DIR, DIO_PIN25_DIR, DIO_PIN24_DIR, DIO_PIN23_DIR, DIO_PIN22_DIR)
#define PORTD_DIR CONCBIT(DIO_PIN21_DIR, DIO_PIN20_DIR, DIO_PIN19_DIR, DIO_PIN18_DIR, DIO_PIN17_DIR, DIO_PIN16_DIR, DIO_PIN15_DIR, DIO_PIN14_DIR)
void DIO_voidInit(void)
{
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
	DDRA = PORTA_DIR;
  8a:	ea e3       	ldi	r30, 0x3A	; 58
  8c:	f0 e0       	ldi	r31, 0x00	; 0
  8e:	88 ef       	ldi	r24, 0xF8	; 248
  90:	80 83       	st	Z, r24
	DDRB = PORTB_DIR;
  92:	e7 e3       	ldi	r30, 0x37	; 55
  94:	f0 e0       	ldi	r31, 0x00	; 0
  96:	8f ef       	ldi	r24, 0xFF	; 255
  98:	80 83       	st	Z, r24
	DDRC = PORTC_DIR;
  9a:	e4 e3       	ldi	r30, 0x34	; 52
  9c:	f0 e0       	ldi	r31, 0x00	; 0
  9e:	8f ef       	ldi	r24, 0xFF	; 255
  a0:	80 83       	st	Z, r24
	DDRD = PORTD_DIR;
  a2:	e1 e3       	ldi	r30, 0x31	; 49
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	87 ef       	ldi	r24, 0xF7	; 247
  a8:	80 83       	st	Z, r24
}
  aa:	cf 91       	pop	r28
  ac:	df 91       	pop	r29
  ae:	08 95       	ret

000000b0 <DIO_voidSetPIN>:

void DIO_voidSetPIN (u8 local_pinNumber, u8 local_pinValue)
{
  b0:	df 93       	push	r29
  b2:	cf 93       	push	r28
  b4:	00 d0       	rcall	.+0      	; 0xb6 <DIO_voidSetPIN+0x6>
  b6:	cd b7       	in	r28, 0x3d	; 61
  b8:	de b7       	in	r29, 0x3e	; 62
  ba:	89 83       	std	Y+1, r24	; 0x01
  bc:	6a 83       	std	Y+2, r22	; 0x02

	if ((local_pinNumber < 41)&&(local_pinNumber >32))
  be:	89 81       	ldd	r24, Y+1	; 0x01
  c0:	89 32       	cpi	r24, 0x29	; 41
  c2:	d8 f5       	brcc	.+118    	; 0x13a <DIO_voidSetPIN+0x8a>
  c4:	89 81       	ldd	r24, Y+1	; 0x01
  c6:	81 32       	cpi	r24, 0x21	; 33
  c8:	c0 f1       	brcs	.+112    	; 0x13a <DIO_voidSetPIN+0x8a>
	{
		if (local_pinValue == DIO_HIGH)
  ca:	8a 81       	ldd	r24, Y+2	; 0x02
  cc:	81 30       	cpi	r24, 0x01	; 1
  ce:	d1 f4       	brne	.+52     	; 0x104 <DIO_voidSetPIN+0x54>
			SET_BIT (PORTA, (-(local_pinNumber-40)));
  d0:	ab e3       	ldi	r26, 0x3B	; 59
  d2:	b0 e0       	ldi	r27, 0x00	; 0
  d4:	eb e3       	ldi	r30, 0x3B	; 59
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	80 81       	ld	r24, Z
  da:	48 2f       	mov	r20, r24
  dc:	89 81       	ldd	r24, Y+1	; 0x01
  de:	28 2f       	mov	r18, r24
  e0:	30 e0       	ldi	r19, 0x00	; 0
  e2:	88 e2       	ldi	r24, 0x28	; 40
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	bc 01       	movw	r22, r24
  e8:	62 1b       	sub	r22, r18
  ea:	73 0b       	sbc	r23, r19
  ec:	9b 01       	movw	r18, r22
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	02 2e       	mov	r0, r18
  f4:	02 c0       	rjmp	.+4      	; 0xfa <DIO_voidSetPIN+0x4a>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	0a 94       	dec	r0
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <DIO_voidSetPIN+0x46>
  fe:	84 2b       	or	r24, r20
 100:	8c 93       	st	X, r24
 102:	bf c0       	rjmp	.+382    	; 0x282 <DIO_voidSetPIN+0x1d2>
		else
			CLR_BIT (PORTA, (-(local_pinNumber-40)));
 104:	ab e3       	ldi	r26, 0x3B	; 59
 106:	b0 e0       	ldi	r27, 0x00	; 0
 108:	eb e3       	ldi	r30, 0x3B	; 59
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	80 81       	ld	r24, Z
 10e:	48 2f       	mov	r20, r24
 110:	89 81       	ldd	r24, Y+1	; 0x01
 112:	28 2f       	mov	r18, r24
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	88 e2       	ldi	r24, 0x28	; 40
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	bc 01       	movw	r22, r24
 11c:	62 1b       	sub	r22, r18
 11e:	73 0b       	sbc	r23, r19
 120:	9b 01       	movw	r18, r22
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	02 2e       	mov	r0, r18
 128:	02 c0       	rjmp	.+4      	; 0x12e <DIO_voidSetPIN+0x7e>
 12a:	88 0f       	add	r24, r24
 12c:	99 1f       	adc	r25, r25
 12e:	0a 94       	dec	r0
 130:	e2 f7       	brpl	.-8      	; 0x12a <DIO_voidSetPIN+0x7a>
 132:	80 95       	com	r24
 134:	84 23       	and	r24, r20
 136:	8c 93       	st	X, r24
 138:	a4 c0       	rjmp	.+328    	; 0x282 <DIO_voidSetPIN+0x1d2>
	}
	else if (local_pinNumber < 9)
 13a:	89 81       	ldd	r24, Y+1	; 0x01
 13c:	89 30       	cpi	r24, 0x09	; 9
 13e:	90 f5       	brcc	.+100    	; 0x1a4 <DIO_voidSetPIN+0xf4>
	{
		if (local_pinValue == DIO_HIGH)
 140:	8a 81       	ldd	r24, Y+2	; 0x02
 142:	81 30       	cpi	r24, 0x01	; 1
 144:	b9 f4       	brne	.+46     	; 0x174 <DIO_voidSetPIN+0xc4>
			SET_BIT (PORTB, (local_pinNumber-1));
 146:	a8 e3       	ldi	r26, 0x38	; 56
 148:	b0 e0       	ldi	r27, 0x00	; 0
 14a:	e8 e3       	ldi	r30, 0x38	; 56
 14c:	f0 e0       	ldi	r31, 0x00	; 0
 14e:	80 81       	ld	r24, Z
 150:	48 2f       	mov	r20, r24
 152:	89 81       	ldd	r24, Y+1	; 0x01
 154:	88 2f       	mov	r24, r24
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	9c 01       	movw	r18, r24
 15a:	21 50       	subi	r18, 0x01	; 1
 15c:	30 40       	sbci	r19, 0x00	; 0
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	02 2e       	mov	r0, r18
 164:	02 c0       	rjmp	.+4      	; 0x16a <DIO_voidSetPIN+0xba>
 166:	88 0f       	add	r24, r24
 168:	99 1f       	adc	r25, r25
 16a:	0a 94       	dec	r0
 16c:	e2 f7       	brpl	.-8      	; 0x166 <DIO_voidSetPIN+0xb6>
 16e:	84 2b       	or	r24, r20
 170:	8c 93       	st	X, r24
 172:	87 c0       	rjmp	.+270    	; 0x282 <DIO_voidSetPIN+0x1d2>
		else
			CLR_BIT (PORTB, (local_pinNumber-1));
 174:	a8 e3       	ldi	r26, 0x38	; 56
 176:	b0 e0       	ldi	r27, 0x00	; 0
 178:	e8 e3       	ldi	r30, 0x38	; 56
 17a:	f0 e0       	ldi	r31, 0x00	; 0
 17c:	80 81       	ld	r24, Z
 17e:	48 2f       	mov	r20, r24
 180:	89 81       	ldd	r24, Y+1	; 0x01
 182:	88 2f       	mov	r24, r24
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	9c 01       	movw	r18, r24
 188:	21 50       	subi	r18, 0x01	; 1
 18a:	30 40       	sbci	r19, 0x00	; 0
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	02 2e       	mov	r0, r18
 192:	02 c0       	rjmp	.+4      	; 0x198 <DIO_voidSetPIN+0xe8>
 194:	88 0f       	add	r24, r24
 196:	99 1f       	adc	r25, r25
 198:	0a 94       	dec	r0
 19a:	e2 f7       	brpl	.-8      	; 0x194 <DIO_voidSetPIN+0xe4>
 19c:	80 95       	com	r24
 19e:	84 23       	and	r24, r20
 1a0:	8c 93       	st	X, r24
 1a2:	6f c0       	rjmp	.+222    	; 0x282 <DIO_voidSetPIN+0x1d2>
	}
	else if ((local_pinNumber < 30)&&(local_pinNumber > 21))
 1a4:	89 81       	ldd	r24, Y+1	; 0x01
 1a6:	8e 31       	cpi	r24, 0x1E	; 30
 1a8:	a8 f5       	brcc	.+106    	; 0x214 <DIO_voidSetPIN+0x164>
 1aa:	89 81       	ldd	r24, Y+1	; 0x01
 1ac:	86 31       	cpi	r24, 0x16	; 22
 1ae:	90 f1       	brcs	.+100    	; 0x214 <DIO_voidSetPIN+0x164>
	{
		if (local_pinValue == DIO_HIGH)
 1b0:	8a 81       	ldd	r24, Y+2	; 0x02
 1b2:	81 30       	cpi	r24, 0x01	; 1
 1b4:	b9 f4       	brne	.+46     	; 0x1e4 <DIO_voidSetPIN+0x134>
			SET_BIT (PORTC, (local_pinNumber-22));
 1b6:	a5 e3       	ldi	r26, 0x35	; 53
 1b8:	b0 e0       	ldi	r27, 0x00	; 0
 1ba:	e5 e3       	ldi	r30, 0x35	; 53
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	80 81       	ld	r24, Z
 1c0:	48 2f       	mov	r20, r24
 1c2:	89 81       	ldd	r24, Y+1	; 0x01
 1c4:	88 2f       	mov	r24, r24
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	9c 01       	movw	r18, r24
 1ca:	26 51       	subi	r18, 0x16	; 22
 1cc:	30 40       	sbci	r19, 0x00	; 0
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	02 2e       	mov	r0, r18
 1d4:	02 c0       	rjmp	.+4      	; 0x1da <DIO_voidSetPIN+0x12a>
 1d6:	88 0f       	add	r24, r24
 1d8:	99 1f       	adc	r25, r25
 1da:	0a 94       	dec	r0
 1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <DIO_voidSetPIN+0x126>
 1de:	84 2b       	or	r24, r20
 1e0:	8c 93       	st	X, r24
 1e2:	4f c0       	rjmp	.+158    	; 0x282 <DIO_voidSetPIN+0x1d2>
		else
			CLR_BIT (PORTC, (local_pinNumber-22));
 1e4:	a5 e3       	ldi	r26, 0x35	; 53
 1e6:	b0 e0       	ldi	r27, 0x00	; 0
 1e8:	e5 e3       	ldi	r30, 0x35	; 53
 1ea:	f0 e0       	ldi	r31, 0x00	; 0
 1ec:	80 81       	ld	r24, Z
 1ee:	48 2f       	mov	r20, r24
 1f0:	89 81       	ldd	r24, Y+1	; 0x01
 1f2:	88 2f       	mov	r24, r24
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	9c 01       	movw	r18, r24
 1f8:	26 51       	subi	r18, 0x16	; 22
 1fa:	30 40       	sbci	r19, 0x00	; 0
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	02 2e       	mov	r0, r18
 202:	02 c0       	rjmp	.+4      	; 0x208 <DIO_voidSetPIN+0x158>
 204:	88 0f       	add	r24, r24
 206:	99 1f       	adc	r25, r25
 208:	0a 94       	dec	r0
 20a:	e2 f7       	brpl	.-8      	; 0x204 <DIO_voidSetPIN+0x154>
 20c:	80 95       	com	r24
 20e:	84 23       	and	r24, r20
 210:	8c 93       	st	X, r24
 212:	37 c0       	rjmp	.+110    	; 0x282 <DIO_voidSetPIN+0x1d2>
	}
	else if ((local_pinNumber < 22)&&(local_pinNumber > 13))
 214:	89 81       	ldd	r24, Y+1	; 0x01
 216:	86 31       	cpi	r24, 0x16	; 22
 218:	a0 f5       	brcc	.+104    	; 0x282 <DIO_voidSetPIN+0x1d2>
 21a:	89 81       	ldd	r24, Y+1	; 0x01
 21c:	8e 30       	cpi	r24, 0x0E	; 14
 21e:	88 f1       	brcs	.+98     	; 0x282 <DIO_voidSetPIN+0x1d2>
	{
		if (local_pinValue == DIO_HIGH)
 220:	8a 81       	ldd	r24, Y+2	; 0x02
 222:	81 30       	cpi	r24, 0x01	; 1
 224:	b9 f4       	brne	.+46     	; 0x254 <DIO_voidSetPIN+0x1a4>
			SET_BIT (PORTD, (local_pinNumber-14));
 226:	a2 e3       	ldi	r26, 0x32	; 50
 228:	b0 e0       	ldi	r27, 0x00	; 0
 22a:	e2 e3       	ldi	r30, 0x32	; 50
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	80 81       	ld	r24, Z
 230:	48 2f       	mov	r20, r24
 232:	89 81       	ldd	r24, Y+1	; 0x01
 234:	88 2f       	mov	r24, r24
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	9c 01       	movw	r18, r24
 23a:	2e 50       	subi	r18, 0x0E	; 14
 23c:	30 40       	sbci	r19, 0x00	; 0
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	02 2e       	mov	r0, r18
 244:	02 c0       	rjmp	.+4      	; 0x24a <DIO_voidSetPIN+0x19a>
 246:	88 0f       	add	r24, r24
 248:	99 1f       	adc	r25, r25
 24a:	0a 94       	dec	r0
 24c:	e2 f7       	brpl	.-8      	; 0x246 <DIO_voidSetPIN+0x196>
 24e:	84 2b       	or	r24, r20
 250:	8c 93       	st	X, r24
 252:	17 c0       	rjmp	.+46     	; 0x282 <DIO_voidSetPIN+0x1d2>
		else
			CLR_BIT (PORTD, (local_pinNumber-14));
 254:	a2 e3       	ldi	r26, 0x32	; 50
 256:	b0 e0       	ldi	r27, 0x00	; 0
 258:	e2 e3       	ldi	r30, 0x32	; 50
 25a:	f0 e0       	ldi	r31, 0x00	; 0
 25c:	80 81       	ld	r24, Z
 25e:	48 2f       	mov	r20, r24
 260:	89 81       	ldd	r24, Y+1	; 0x01
 262:	88 2f       	mov	r24, r24
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	9c 01       	movw	r18, r24
 268:	2e 50       	subi	r18, 0x0E	; 14
 26a:	30 40       	sbci	r19, 0x00	; 0
 26c:	81 e0       	ldi	r24, 0x01	; 1
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	02 2e       	mov	r0, r18
 272:	02 c0       	rjmp	.+4      	; 0x278 <DIO_voidSetPIN+0x1c8>
 274:	88 0f       	add	r24, r24
 276:	99 1f       	adc	r25, r25
 278:	0a 94       	dec	r0
 27a:	e2 f7       	brpl	.-8      	; 0x274 <DIO_voidSetPIN+0x1c4>
 27c:	80 95       	com	r24
 27e:	84 23       	and	r24, r20
 280:	8c 93       	st	X, r24
	}
}
 282:	0f 90       	pop	r0
 284:	0f 90       	pop	r0
 286:	cf 91       	pop	r28
 288:	df 91       	pop	r29
 28a:	08 95       	ret

0000028c <DIO_u8GetPin>:

u8 DIO_u8GetPin(u8 local_pinNumber)
{
 28c:	df 93       	push	r29
 28e:	cf 93       	push	r28
 290:	0f 92       	push	r0
 292:	cd b7       	in	r28, 0x3d	; 61
 294:	de b7       	in	r29, 0x3e	; 62
 296:	89 83       	std	Y+1, r24	; 0x01
	if ((local_pinNumber < 41)&&(local_pinNumber >32))
 298:	89 81       	ldd	r24, Y+1	; 0x01
 29a:	89 32       	cpi	r24, 0x29	; 41
 29c:	08 f5       	brcc	.+66     	; 0x2e0 <DIO_u8GetPin+0x54>
 29e:	89 81       	ldd	r24, Y+1	; 0x01
 2a0:	81 32       	cpi	r24, 0x21	; 33
 2a2:	f0 f0       	brcs	.+60     	; 0x2e0 <DIO_u8GetPin+0x54>
	{
		if ((GET_BIT(PINA, (-(local_pinNumber-40))))==1)
 2a4:	e9 e3       	ldi	r30, 0x39	; 57
 2a6:	f0 e0       	ldi	r31, 0x00	; 0
 2a8:	80 81       	ld	r24, Z
 2aa:	48 2f       	mov	r20, r24
 2ac:	50 e0       	ldi	r21, 0x00	; 0
 2ae:	89 81       	ldd	r24, Y+1	; 0x01
 2b0:	28 2f       	mov	r18, r24
 2b2:	30 e0       	ldi	r19, 0x00	; 0
 2b4:	88 e2       	ldi	r24, 0x28	; 40
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	82 1b       	sub	r24, r18
 2ba:	93 0b       	sbc	r25, r19
 2bc:	9a 01       	movw	r18, r20
 2be:	02 c0       	rjmp	.+4      	; 0x2c4 <DIO_u8GetPin+0x38>
 2c0:	35 95       	asr	r19
 2c2:	27 95       	ror	r18
 2c4:	8a 95       	dec	r24
 2c6:	e2 f7       	brpl	.-8      	; 0x2c0 <DIO_u8GetPin+0x34>
 2c8:	c9 01       	movw	r24, r18
 2ca:	81 70       	andi	r24, 0x01	; 1
 2cc:	90 70       	andi	r25, 0x00	; 0
 2ce:	88 23       	and	r24, r24
 2d0:	21 f0       	breq	.+8      	; 0x2da <DIO_u8GetPin+0x4e>
			ret=DIO_HIGH;
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	80 93 60 00 	sts	0x0060, r24
 2d8:	62 c0       	rjmp	.+196    	; 0x39e <DIO_u8GetPin+0x112>
		else
			ret=DIO_LOW;
 2da:	10 92 60 00 	sts	0x0060, r1
 2de:	5f c0       	rjmp	.+190    	; 0x39e <DIO_u8GetPin+0x112>
	}

	else if (local_pinNumber < 9)
 2e0:	89 81       	ldd	r24, Y+1	; 0x01
 2e2:	89 30       	cpi	r24, 0x09	; 9
 2e4:	d8 f4       	brcc	.+54     	; 0x31c <DIO_u8GetPin+0x90>
	{
			if ((GET_BIT(PINB, (local_pinNumber-1)))==1)
 2e6:	e6 e3       	ldi	r30, 0x36	; 54
 2e8:	f0 e0       	ldi	r31, 0x00	; 0
 2ea:	80 81       	ld	r24, Z
 2ec:	28 2f       	mov	r18, r24
 2ee:	30 e0       	ldi	r19, 0x00	; 0
 2f0:	89 81       	ldd	r24, Y+1	; 0x01
 2f2:	88 2f       	mov	r24, r24
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	01 97       	sbiw	r24, 0x01	; 1
 2f8:	a9 01       	movw	r20, r18
 2fa:	02 c0       	rjmp	.+4      	; 0x300 <DIO_u8GetPin+0x74>
 2fc:	55 95       	asr	r21
 2fe:	47 95       	ror	r20
 300:	8a 95       	dec	r24
 302:	e2 f7       	brpl	.-8      	; 0x2fc <DIO_u8GetPin+0x70>
 304:	ca 01       	movw	r24, r20
 306:	81 70       	andi	r24, 0x01	; 1
 308:	90 70       	andi	r25, 0x00	; 0
 30a:	88 23       	and	r24, r24
 30c:	21 f0       	breq	.+8      	; 0x316 <DIO_u8GetPin+0x8a>
				ret=DIO_HIGH;
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	80 93 60 00 	sts	0x0060, r24
 314:	44 c0       	rjmp	.+136    	; 0x39e <DIO_u8GetPin+0x112>
			else
				ret=DIO_LOW;
 316:	10 92 60 00 	sts	0x0060, r1
 31a:	41 c0       	rjmp	.+130    	; 0x39e <DIO_u8GetPin+0x112>
	}
	else if ((local_pinNumber < 30)&&(local_pinNumber > 21))
 31c:	89 81       	ldd	r24, Y+1	; 0x01
 31e:	8e 31       	cpi	r24, 0x1E	; 30
 320:	f0 f4       	brcc	.+60     	; 0x35e <DIO_u8GetPin+0xd2>
 322:	89 81       	ldd	r24, Y+1	; 0x01
 324:	86 31       	cpi	r24, 0x16	; 22
 326:	d8 f0       	brcs	.+54     	; 0x35e <DIO_u8GetPin+0xd2>
	{
			if ((GET_BIT(PINC, (local_pinNumber-22)))==1)
 328:	e3 e3       	ldi	r30, 0x33	; 51
 32a:	f0 e0       	ldi	r31, 0x00	; 0
 32c:	80 81       	ld	r24, Z
 32e:	28 2f       	mov	r18, r24
 330:	30 e0       	ldi	r19, 0x00	; 0
 332:	89 81       	ldd	r24, Y+1	; 0x01
 334:	88 2f       	mov	r24, r24
 336:	90 e0       	ldi	r25, 0x00	; 0
 338:	46 97       	sbiw	r24, 0x16	; 22
 33a:	a9 01       	movw	r20, r18
 33c:	02 c0       	rjmp	.+4      	; 0x342 <DIO_u8GetPin+0xb6>
 33e:	55 95       	asr	r21
 340:	47 95       	ror	r20
 342:	8a 95       	dec	r24
 344:	e2 f7       	brpl	.-8      	; 0x33e <DIO_u8GetPin+0xb2>
 346:	ca 01       	movw	r24, r20
 348:	81 70       	andi	r24, 0x01	; 1
 34a:	90 70       	andi	r25, 0x00	; 0
 34c:	88 23       	and	r24, r24
 34e:	21 f0       	breq	.+8      	; 0x358 <DIO_u8GetPin+0xcc>
				ret=DIO_HIGH;
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	80 93 60 00 	sts	0x0060, r24
 356:	23 c0       	rjmp	.+70     	; 0x39e <DIO_u8GetPin+0x112>
			else
				ret=DIO_LOW;
 358:	10 92 60 00 	sts	0x0060, r1
 35c:	20 c0       	rjmp	.+64     	; 0x39e <DIO_u8GetPin+0x112>
	}
	else if ((local_pinNumber < 22)&&(local_pinNumber > 13))
 35e:	89 81       	ldd	r24, Y+1	; 0x01
 360:	86 31       	cpi	r24, 0x16	; 22
 362:	e8 f4       	brcc	.+58     	; 0x39e <DIO_u8GetPin+0x112>
 364:	89 81       	ldd	r24, Y+1	; 0x01
 366:	8e 30       	cpi	r24, 0x0E	; 14
 368:	d0 f0       	brcs	.+52     	; 0x39e <DIO_u8GetPin+0x112>
	{
			if ((GET_BIT(PIND, (local_pinNumber-14)))==1)
 36a:	e0 e3       	ldi	r30, 0x30	; 48
 36c:	f0 e0       	ldi	r31, 0x00	; 0
 36e:	80 81       	ld	r24, Z
 370:	28 2f       	mov	r18, r24
 372:	30 e0       	ldi	r19, 0x00	; 0
 374:	89 81       	ldd	r24, Y+1	; 0x01
 376:	88 2f       	mov	r24, r24
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	0e 97       	sbiw	r24, 0x0e	; 14
 37c:	a9 01       	movw	r20, r18
 37e:	02 c0       	rjmp	.+4      	; 0x384 <DIO_u8GetPin+0xf8>
 380:	55 95       	asr	r21
 382:	47 95       	ror	r20
 384:	8a 95       	dec	r24
 386:	e2 f7       	brpl	.-8      	; 0x380 <DIO_u8GetPin+0xf4>
 388:	ca 01       	movw	r24, r20
 38a:	81 70       	andi	r24, 0x01	; 1
 38c:	90 70       	andi	r25, 0x00	; 0
 38e:	88 23       	and	r24, r24
 390:	21 f0       	breq	.+8      	; 0x39a <DIO_u8GetPin+0x10e>
				ret=DIO_HIGH;
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	80 93 60 00 	sts	0x0060, r24
 398:	02 c0       	rjmp	.+4      	; 0x39e <DIO_u8GetPin+0x112>
			else
				ret=DIO_LOW;
 39a:	10 92 60 00 	sts	0x0060, r1
	}
	return ret;
 39e:	80 91 60 00 	lds	r24, 0x0060
}
 3a2:	0f 90       	pop	r0
 3a4:	cf 91       	pop	r28
 3a6:	df 91       	pop	r29
 3a8:	08 95       	ret

000003aa <main>:
#include "std_types.h"
#include "utils.h"
#include "DIO_config.h"

void main()
{
 3aa:	df 93       	push	r29
 3ac:	cf 93       	push	r28
 3ae:	00 d0       	rcall	.+0      	; 0x3b0 <main+0x6>
 3b0:	00 d0       	rcall	.+0      	; 0x3b2 <main+0x8>
 3b2:	0f 92       	push	r0
 3b4:	cd b7       	in	r28, 0x3d	; 61
 3b6:	de b7       	in	r29, 0x3e	; 62
	DIO_voidInit();
 3b8:	0e 94 41 00 	call	0x82	; 0x82 <DIO_voidInit>
	u8 enb,up,down;
	u8 counter = 0;
 3bc:	1a 82       	std	Y+2, r1	; 0x02
	u8 up_down_flag =0; //0->going up   1->going down
 3be:	19 82       	std	Y+1, r1	; 0x01
	while (1)
	{
		//Buttons
		enb = DIO_u8GetPin(DIO_PIN40);
 3c0:	88 e2       	ldi	r24, 0x28	; 40
 3c2:	0e 94 46 01 	call	0x28c	; 0x28c <DIO_u8GetPin>
 3c6:	8d 83       	std	Y+5, r24	; 0x05
		up = DIO_u8GetPin(DIO_PIN39);
 3c8:	87 e2       	ldi	r24, 0x27	; 39
 3ca:	0e 94 46 01 	call	0x28c	; 0x28c <DIO_u8GetPin>
 3ce:	8c 83       	std	Y+4, r24	; 0x04
		down = DIO_u8GetPin(DIO_PIN38);
 3d0:	86 e2       	ldi	r24, 0x26	; 38
 3d2:	0e 94 46 01 	call	0x28c	; 0x28c <DIO_u8GetPin>
 3d6:	8b 83       	std	Y+3, r24	; 0x03

		if(DIO_u8GetPin(DIO_PIN40)==DIO_HIGH) //activating the buttons only if the enable is active
 3d8:	88 e2       	ldi	r24, 0x28	; 40
 3da:	0e 94 46 01 	call	0x28c	; 0x28c <DIO_u8GetPin>
 3de:	81 30       	cpi	r24, 0x01	; 1
 3e0:	49 f5       	brne	.+82     	; 0x434 <main+0x8a>
		{
			//Reading the up button and incrementing the counter till 4 only
			if(DIO_u8GetPin(DIO_PIN39)==DIO_HIGH)
 3e2:	87 e2       	ldi	r24, 0x27	; 39
 3e4:	0e 94 46 01 	call	0x28c	; 0x28c <DIO_u8GetPin>
 3e8:	81 30       	cpi	r24, 0x01	; 1
 3ea:	81 f4       	brne	.+32     	; 0x40c <main+0x62>
			{
				up_down_flag =0;
 3ec:	19 82       	std	Y+1, r1	; 0x01
				while(DIO_u8GetPin(DIO_PIN39)==DIO_HIGH){}
 3ee:	87 e2       	ldi	r24, 0x27	; 39
 3f0:	0e 94 46 01 	call	0x28c	; 0x28c <DIO_u8GetPin>
 3f4:	81 30       	cpi	r24, 0x01	; 1
 3f6:	d9 f3       	breq	.-10     	; 0x3ee <main+0x44>
				if(counter>=4)
 3f8:	8a 81       	ldd	r24, Y+2	; 0x02
 3fa:	84 30       	cpi	r24, 0x04	; 4
 3fc:	18 f0       	brcs	.+6      	; 0x404 <main+0x5a>
				{
					counter=4;
 3fe:	84 e0       	ldi	r24, 0x04	; 4
 400:	8a 83       	std	Y+2, r24	; 0x02
 402:	18 c0       	rjmp	.+48     	; 0x434 <main+0x8a>
				}
				else
				{
					counter++;
 404:	8a 81       	ldd	r24, Y+2	; 0x02
 406:	8f 5f       	subi	r24, 0xFF	; 255
 408:	8a 83       	std	Y+2, r24	; 0x02
 40a:	14 c0       	rjmp	.+40     	; 0x434 <main+0x8a>
				}
			}
			//********************************************************

			//Reading the down button and decrementing the counter till 0 only
			else if(DIO_u8GetPin(DIO_PIN38)==DIO_HIGH)
 40c:	86 e2       	ldi	r24, 0x26	; 38
 40e:	0e 94 46 01 	call	0x28c	; 0x28c <DIO_u8GetPin>
 412:	81 30       	cpi	r24, 0x01	; 1
 414:	79 f4       	brne	.+30     	; 0x434 <main+0x8a>
			{
				up_down_flag =1;
 416:	81 e0       	ldi	r24, 0x01	; 1
 418:	89 83       	std	Y+1, r24	; 0x01
				while(DIO_u8GetPin(DIO_PIN38)==DIO_LOW);
 41a:	86 e2       	ldi	r24, 0x26	; 38
 41c:	0e 94 46 01 	call	0x28c	; 0x28c <DIO_u8GetPin>
 420:	88 23       	and	r24, r24
 422:	d9 f3       	breq	.-10     	; 0x41a <main+0x70>
				if(counter==0)
 424:	8a 81       	ldd	r24, Y+2	; 0x02
 426:	88 23       	and	r24, r24
 428:	11 f4       	brne	.+4      	; 0x42e <main+0x84>
				{
					counter=0;
 42a:	1a 82       	std	Y+2, r1	; 0x02
 42c:	03 c0       	rjmp	.+6      	; 0x434 <main+0x8a>
				}
				else
				{
					counter--;
 42e:	8a 81       	ldd	r24, Y+2	; 0x02
 430:	81 50       	subi	r24, 0x01	; 1
 432:	8a 83       	std	Y+2, r24	; 0x02
		//Level4->pin26

		//fill up->pin22
		//fill down->pin23

		if(counter==1)
 434:	8a 81       	ldd	r24, Y+2	; 0x02
 436:	81 30       	cpi	r24, 0x01	; 1
 438:	e9 f4       	brne	.+58     	; 0x474 <__stack+0x15>
		{
			DIO_voidSetPIN(DIO_PIN29,DIO_HIGH);
 43a:	8d e1       	ldi	r24, 0x1D	; 29
 43c:	61 e0       	ldi	r22, 0x01	; 1
 43e:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
			DIO_voidSetPIN(DIO_PIN28,DIO_LOW);
 442:	8c e1       	ldi	r24, 0x1C	; 28
 444:	60 e0       	ldi	r22, 0x00	; 0
 446:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
			DIO_voidSetPIN(DIO_PIN27,DIO_LOW);
 44a:	8b e1       	ldi	r24, 0x1B	; 27
 44c:	60 e0       	ldi	r22, 0x00	; 0
 44e:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
			DIO_voidSetPIN(DIO_PIN26,DIO_LOW);
 452:	8a e1       	ldi	r24, 0x1A	; 26
 454:	60 e0       	ldi	r22, 0x00	; 0
 456:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
			if(DIO_u8GetPin(DIO_PIN40)==DIO_HIGH)
 45a:	88 e2       	ldi	r24, 0x28	; 40
 45c:	0e 94 46 01 	call	0x28c	; 0x28c <DIO_u8GetPin>
 460:	81 30       	cpi	r24, 0x01	; 1
 462:	41 f4       	brne	.+16     	; 0x474 <__stack+0x15>
			{
				DIO_voidSetPIN(DIO_PIN22,DIO_HIGH);
 464:	86 e1       	ldi	r24, 0x16	; 22
 466:	61 e0       	ldi	r22, 0x01	; 1
 468:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
				DIO_voidSetPIN(DIO_PIN23,DIO_LOW);
 46c:	87 e1       	ldi	r24, 0x17	; 23
 46e:	60 e0       	ldi	r22, 0x00	; 0
 470:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
			}
		}

		if(counter==2)
 474:	8a 81       	ldd	r24, Y+2	; 0x02
 476:	82 30       	cpi	r24, 0x02	; 2
 478:	e9 f4       	brne	.+58     	; 0x4b4 <__stack+0x55>
		{
			DIO_voidSetPIN(DIO_PIN29,DIO_HIGH);
 47a:	8d e1       	ldi	r24, 0x1D	; 29
 47c:	61 e0       	ldi	r22, 0x01	; 1
 47e:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
			DIO_voidSetPIN(DIO_PIN28,DIO_HIGH);
 482:	8c e1       	ldi	r24, 0x1C	; 28
 484:	61 e0       	ldi	r22, 0x01	; 1
 486:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
			DIO_voidSetPIN(DIO_PIN27,DIO_LOW);
 48a:	8b e1       	ldi	r24, 0x1B	; 27
 48c:	60 e0       	ldi	r22, 0x00	; 0
 48e:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
			DIO_voidSetPIN(DIO_PIN26,DIO_LOW);
 492:	8a e1       	ldi	r24, 0x1A	; 26
 494:	60 e0       	ldi	r22, 0x00	; 0
 496:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
			if(DIO_u8GetPin(DIO_PIN40)==DIO_HIGH)
 49a:	88 e2       	ldi	r24, 0x28	; 40
 49c:	0e 94 46 01 	call	0x28c	; 0x28c <DIO_u8GetPin>
 4a0:	81 30       	cpi	r24, 0x01	; 1
 4a2:	41 f4       	brne	.+16     	; 0x4b4 <__stack+0x55>
			{
				DIO_voidSetPIN(DIO_PIN22,DIO_HIGH);
 4a4:	86 e1       	ldi	r24, 0x16	; 22
 4a6:	61 e0       	ldi	r22, 0x01	; 1
 4a8:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
				DIO_voidSetPIN(DIO_PIN23,DIO_LOW);
 4ac:	87 e1       	ldi	r24, 0x17	; 23
 4ae:	60 e0       	ldi	r22, 0x00	; 0
 4b0:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
			}
		}

		if(counter==3)
 4b4:	8a 81       	ldd	r24, Y+2	; 0x02
 4b6:	83 30       	cpi	r24, 0x03	; 3
 4b8:	61 f5       	brne	.+88     	; 0x512 <__stack+0xb3>
		{
			DIO_voidSetPIN(DIO_PIN29,DIO_HIGH);
 4ba:	8d e1       	ldi	r24, 0x1D	; 29
 4bc:	61 e0       	ldi	r22, 0x01	; 1
 4be:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
			DIO_voidSetPIN(DIO_PIN28,DIO_HIGH);
 4c2:	8c e1       	ldi	r24, 0x1C	; 28
 4c4:	61 e0       	ldi	r22, 0x01	; 1
 4c6:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
			DIO_voidSetPIN(DIO_PIN27,DIO_HIGH);
 4ca:	8b e1       	ldi	r24, 0x1B	; 27
 4cc:	61 e0       	ldi	r22, 0x01	; 1
 4ce:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
			DIO_voidSetPIN(DIO_PIN26,DIO_LOW);
 4d2:	8a e1       	ldi	r24, 0x1A	; 26
 4d4:	60 e0       	ldi	r22, 0x00	; 0
 4d6:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
			if(DIO_u8GetPin(DIO_PIN40)==DIO_HIGH)
 4da:	88 e2       	ldi	r24, 0x28	; 40
 4dc:	0e 94 46 01 	call	0x28c	; 0x28c <DIO_u8GetPin>
 4e0:	81 30       	cpi	r24, 0x01	; 1
 4e2:	b9 f4       	brne	.+46     	; 0x512 <__stack+0xb3>
			{
				if(up_down_flag ==0)
 4e4:	89 81       	ldd	r24, Y+1	; 0x01
 4e6:	88 23       	and	r24, r24
 4e8:	49 f4       	brne	.+18     	; 0x4fc <__stack+0x9d>
				{
					DIO_voidSetPIN(DIO_PIN22,DIO_HIGH);
 4ea:	86 e1       	ldi	r24, 0x16	; 22
 4ec:	61 e0       	ldi	r22, 0x01	; 1
 4ee:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
					DIO_voidSetPIN(DIO_PIN23,DIO_LOW);
 4f2:	87 e1       	ldi	r24, 0x17	; 23
 4f4:	60 e0       	ldi	r22, 0x00	; 0
 4f6:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
 4fa:	0b c0       	rjmp	.+22     	; 0x512 <__stack+0xb3>
				}
				else if(up_down_flag ==1)
 4fc:	89 81       	ldd	r24, Y+1	; 0x01
 4fe:	81 30       	cpi	r24, 0x01	; 1
 500:	41 f4       	brne	.+16     	; 0x512 <__stack+0xb3>
				{
					DIO_voidSetPIN(DIO_PIN23,DIO_HIGH);
 502:	87 e1       	ldi	r24, 0x17	; 23
 504:	61 e0       	ldi	r22, 0x01	; 1
 506:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
					DIO_voidSetPIN(DIO_PIN22,DIO_LOW);
 50a:	86 e1       	ldi	r24, 0x16	; 22
 50c:	60 e0       	ldi	r22, 0x00	; 0
 50e:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
				}
			}
		}

		if(counter==4)
 512:	8a 81       	ldd	r24, Y+2	; 0x02
 514:	84 30       	cpi	r24, 0x04	; 4
 516:	09 f0       	breq	.+2      	; 0x51a <__stack+0xbb>
 518:	53 cf       	rjmp	.-346    	; 0x3c0 <main+0x16>
		{
			DIO_voidSetPIN(DIO_PIN29,DIO_HIGH);
 51a:	8d e1       	ldi	r24, 0x1D	; 29
 51c:	61 e0       	ldi	r22, 0x01	; 1
 51e:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
			DIO_voidSetPIN(DIO_PIN28,DIO_HIGH);
 522:	8c e1       	ldi	r24, 0x1C	; 28
 524:	61 e0       	ldi	r22, 0x01	; 1
 526:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
			DIO_voidSetPIN(DIO_PIN27,DIO_HIGH);
 52a:	8b e1       	ldi	r24, 0x1B	; 27
 52c:	61 e0       	ldi	r22, 0x01	; 1
 52e:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
			DIO_voidSetPIN(DIO_PIN26,DIO_HIGH);
 532:	8a e1       	ldi	r24, 0x1A	; 26
 534:	61 e0       	ldi	r22, 0x01	; 1
 536:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
			if(DIO_u8GetPin(DIO_PIN40)==DIO_HIGH)
 53a:	88 e2       	ldi	r24, 0x28	; 40
 53c:	0e 94 46 01 	call	0x28c	; 0x28c <DIO_u8GetPin>
 540:	81 30       	cpi	r24, 0x01	; 1
 542:	09 f0       	breq	.+2      	; 0x546 <__stack+0xe7>
 544:	3d cf       	rjmp	.-390    	; 0x3c0 <main+0x16>
			{
				DIO_voidSetPIN(DIO_PIN23,DIO_HIGH);
 546:	87 e1       	ldi	r24, 0x17	; 23
 548:	61 e0       	ldi	r22, 0x01	; 1
 54a:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
				DIO_voidSetPIN(DIO_PIN22,DIO_LOW);
 54e:	86 e1       	ldi	r24, 0x16	; 22
 550:	60 e0       	ldi	r22, 0x00	; 0
 552:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPIN>
 556:	34 cf       	rjmp	.-408    	; 0x3c0 <main+0x16>

00000558 <_exit>:
 558:	f8 94       	cli

0000055a <__stop_program>:
 55a:	ff cf       	rjmp	.-2      	; 0x55a <__stop_program>
